{"is_source_file": true, "format": "TypeScript (React hooks)", "description": "This file defines a custom React hook called useToast, which manages toast notifications within a React application. It provides functions to add and remove toasts, handling state internally and exposing an API for use in other components.", "external_files": [], "external_methods": ["React.useState", "React.useCallback", "React.useMemo"], "published": ["useToast"], "classes": [], "methods": [{"name": "export function useToast() { useToast", "description": "Custom React hook to manage toast notifications, providing API methods to add and remove toasts, and managing toast state.", "scope": "", "scopeKind": ""}, {"name": "addToast", "description": "Adds a new toast notification with a unique ID, message, type, and auto-hide duration."}, {"name": "removeToast", "description": "Removes a toast notification by ID."}], "calls": ["React.useState", "React.useCallback", "React.useMemo"], "search-terms": ["useToast", "toast notifications", "React hook", "toast management", "useCallback", "useMemo"], "state": 2, "file_id": 15, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "addToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const addToast = React.useCallback((message, type = \"info\", autoHide = 3500) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const api = React.useMemo(() => ({ addToast, removeToast, toasts }), [addToast, removeToast, t/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "counter", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^let counter = 0;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "removeToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const removeToast = React.useCallback((id) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "setToasts", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const [toasts, setToasts] = React.useState([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "toasts", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const [toasts, setToasts] = React.useState([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "useToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^export function useToast() {$/", "language": "TypeScript", "kind": "function"}], "hash": "640564b00fd072255f7b0a8e288cd5af", "format-version": 4, "code-base-name": "FrontendContainer", "filename": "FrontendContainer/src/hooks/useToast.ts", "fields": [{"name": "let counter = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"31": ""}]}