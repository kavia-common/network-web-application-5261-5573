{"is_source_file": true, "format": "TypeScript (React hooks)", "description": "This file defines a custom React hook called 'useToast' for managing toast notifications across a web application. It provides functions to add and remove toast messages, maintaining an internal state of active toasts.", "external_files": [], "external_methods": ["React.useState", "React.useCallback", "React.useMemo"], "published": ["useToast"], "classes": [], "methods": [{"name": "export function useToast() { useToast", "description": "Custom React hook that manages toast notifications, providing methods to add and remove toasts.", "scope": "", "scopeKind": ""}], "calls": ["React.useState", "React.useCallback", "React.useMemo", "setToasts", "prev => [...prev, { id, message, type, autoHide }]", "prev => prev.filter((t) => t.id !== id)"], "search-terms": ["useToast", "toast notifications", "React hook for toasts", "toast management", "useCallback", "useMemo"], "state": 2, "file_id": 49, "knowledge_revision": 163, "git_revision": "a24f61663b84d202c436ead5980e0987e2d73d55", "ctags": [{"_type": "tag", "name": "addToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const addToast = React.useCallback((message, type = \"info\", autoHide = 3500) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const api = React.useMemo(() => ({ addToast, removeToast, toasts }), [addToast, removeToast, t/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "counter", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^let counter = 0;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "removeToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const removeToast = React.useCallback((id) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "setToasts", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const [toasts, setToasts] = React.useState([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "toasts", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^  const [toasts, setToasts] = React.useState([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useToast", "scopeKind": "function"}, {"_type": "tag", "name": "useToast", "path": "/home/kavia/workspace/code-generation/network-web-application-5261-5573/FrontendContainer/src/hooks/useToast.ts", "pattern": "/^export function useToast() {$/", "language": "TypeScript", "kind": "function"}], "hash": "640564b00fd072255f7b0a8e288cd5af", "format-version": 4, "code-base-name": "FrontendContainer", "filename": "FrontendContainer/src/hooks/useToast.ts", "fields": [{"name": "let counter = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"163": "a24f61663b84d202c436ead5980e0987e2d73d55"}]}